/**
 * Common Style Components
 *
 * Reusable style functions and common component styles.
 * These styles are used across multiple screens to maintain consistency.
 */

import { StyleSheet, TextStyle, ViewStyle } from 'react-native';
import { theme } from './theme';

const { colors, typography, spacing, layout, shadows, borderRadius } = theme;

/**
 * Common container styles
 */
export const containers = StyleSheet.create({
  screen: {
    flex: 1,
    backgroundColor: colors.background,
  } as ViewStyle,

  screenWithHeader: {
    flex: 1,
    backgroundColor: colors.background,
  } as ViewStyle,

  content: {
    flex: 1,
  } as ViewStyle,

  contentPadded: {
    flex: 1,
    padding: layout.screenPadding,
  } as ViewStyle,

  section: {
    padding: layout.sectionPadding,
    borderBottomWidth: 1,
    borderBottomColor: colors.borderLight,
  } as ViewStyle,

  row: {
    flexDirection: 'row',
    alignItems: 'center',
  } as ViewStyle,

  rowSpaceBetween: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
  } as ViewStyle,

  center: {
    alignItems: 'center',
    justifyContent: 'center',
  } as ViewStyle,

  centerHorizontal: {
    alignItems: 'center',
  } as ViewStyle,
});

/**
 * Header styles (used across multiple screens)
 */
export const headers = StyleSheet.create({
  container: {
    paddingTop: layout.headerPaddingTop,
    paddingBottom: layout.headerPaddingBottom,
    paddingHorizontal: layout.headerPaddingHorizontal,
    backgroundColor: colors.backgroundSecondary,
    borderBottomWidth: 1,
    borderBottomColor: colors.border,
  } as ViewStyle,

  title: {
    fontSize: typography.size['2xl'],
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    textAlign: 'center',
  } as TextStyle,

  subtitle: {
    fontSize: typography.size.base,
    color: colors.textSecondary,
    textAlign: 'center',
    marginTop: spacing.xs,
  } as TextStyle,
});

/**
 * Typography styles
 */
export const text = StyleSheet.create({
  // Headings
  h1: {
    fontSize: typography.size['2xl'],
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    lineHeight: typography.size['2xl'] * typography.lineHeight.tight,
  } as TextStyle,

  h2: {
    fontSize: typography.size.xl,
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    lineHeight: typography.size.xl * typography.lineHeight.tight,
  } as TextStyle,

  h3: {
    fontSize: typography.size.lg,
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    lineHeight: typography.size.lg * typography.lineHeight.tight,
  } as TextStyle,

  // Body text
  body: {
    fontSize: typography.size.base,
    color: colors.textPrimary,
    lineHeight: typography.size.base * typography.lineHeight.normal,
  } as TextStyle,

  bodySecondary: {
    fontSize: typography.size.base,
    color: colors.textSecondary,
    lineHeight: typography.size.base * typography.lineHeight.normal,
  } as TextStyle,

  bodySmall: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    lineHeight: typography.size.sm * typography.lineHeight.normal,
  } as TextStyle,

  // Special text styles
  caption: {
    fontSize: typography.size.xs,
    color: colors.textSecondary,
    lineHeight: typography.size.xs * typography.lineHeight.normal,
  } as TextStyle,

  label: {
    fontSize: typography.size.base,
    fontWeight: typography.weight.medium,
    color: colors.textPrimary,
  } as TextStyle,

  description: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    marginTop: spacing.xs / 2,
  } as TextStyle,

  // List styles
  listItem: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    marginBottom: spacing.sm,
    paddingLeft: spacing.md,
  } as TextStyle,

  featureItem: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    marginBottom: spacing.sm,
    paddingLeft: spacing.md,
  } as TextStyle,
});

/**
 * Empty state styles
 */
export const emptyState = StyleSheet.create({
  container: {
    alignItems: 'center',
    padding: spacing['3xl'],
    marginTop: spacing['5xl'],
  } as ViewStyle,

  icon: {
    fontSize: typography.size['7xl'],
    marginBottom: spacing.base,
  } as TextStyle,

  title: {
    fontSize: typography.size.xl,
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    marginBottom: spacing.sm,
  } as TextStyle,

  description: {
    fontSize: typography.size.base,
    color: colors.textSecondary,
    textAlign: 'center',
    lineHeight: typography.size.base * typography.lineHeight.relaxed,
    marginBottom: spacing['3xl'],
  } as TextStyle,
});

/**
 * Card styles
 */
export const cards = StyleSheet.create({
  container: {
    backgroundColor: colors.background,
    borderRadius: theme.borderRadius.base,
    padding: spacing.base,
    marginBottom: spacing.base,
    ...theme.shadows.sm,
  } as ViewStyle,

  header: {
    marginBottom: spacing.base,
  } as ViewStyle,

  title: {
    fontSize: typography.size.lg,
    fontWeight: typography.weight.semibold,
    color: colors.textPrimary,
  } as TextStyle,

  content: {
    marginTop: spacing.sm,
  } as ViewStyle,
});

/**
 * Form styles
 */
export const forms = StyleSheet.create({
  settingItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: spacing.md,
    minHeight: layout.headerHeight,
  } as ViewStyle,

  settingText: {
    flex: 1,
    marginRight: spacing.base,
  } as ViewStyle,

  settingLabel: {
    fontSize: typography.size.base,
    color: colors.textPrimary,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  settingDescription: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    marginTop: spacing.xs / 2,
  } as TextStyle,
});

/**
 * Profile specific styles
 */
export const profile = StyleSheet.create({
  avatar: {
    width: layout.avatarSize,
    height: layout.avatarSize,
    borderRadius: layout.avatarSize / 2,
    backgroundColor: colors.gray200,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: spacing.base,
  } as ViewStyle,

  avatarText: {
    fontSize: typography.size['4xl'],
  } as TextStyle,

  userName: {
    fontSize: typography.size.xl,
    fontWeight: typography.weight.bold,
    color: colors.textPrimary,
    marginBottom: spacing.xs,
  } as TextStyle,

  userSubtitle: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
  } as TextStyle,

  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  } as ViewStyle,

  statItem: {
    width: '48%',
    alignItems: 'center',
    padding: spacing.base,
    backgroundColor: colors.backgroundSecondary,
    borderRadius: theme.borderRadius.base,
    marginBottom: spacing.md,
  } as ViewStyle,

  statNumber: {
    fontSize: typography.size['2xl'],
    fontWeight: typography.weight.bold,
    color: colors.primary,
    marginBottom: spacing.xs,
  } as TextStyle,

  statLabel: {
    fontSize: typography.size.xs,
    color: colors.textSecondary,
    textAlign: 'center',
  } as TextStyle,
});

/**
 * Map styles
 */
export const mapStyles = StyleSheet.create({
  container: {
    flex: 1,
  } as ViewStyle,

  header: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    zIndex: 1000,
    paddingTop: layout.headerPaddingTop,
    paddingBottom: spacing.md,
    paddingHorizontal: layout.headerPaddingHorizontal,
    backgroundColor: colors.background,
    borderBottomWidth: 1,
    borderBottomColor: colors.border,
  } as ViewStyle,

  headerContent: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
  } as ViewStyle,

  headerText: {
    flex: 1,
    textAlign: 'center',
  } as ViewStyle,

  title: {
    fontSize: typography.size.xl,
    fontWeight: typography.weight.semibold,
    color: colors.textPrimary,
  } as TextStyle,

  subtitle: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    textAlign: 'center',
    marginTop: spacing.xs,
  } as TextStyle,

  footer: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    padding: spacing.md,
    backgroundColor: colors.backgroundTertiary,
    borderTopWidth: 1,
    borderTopColor: colors.border,
  } as ViewStyle,

  footerText: {
    fontSize: typography.size.xs,
    color: colors.textSecondary,
    textAlign: 'center',
  } as TextStyle,

  // Map-specific components
  markerContainer: {
    width: 30,
    height: 30,
    borderRadius: 15,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: colors.white,
    ...shadows.md,
  } as ViewStyle,

  markerInner: {
    justifyContent: 'center',
    alignItems: 'center',
    width: '100%',
    height: '100%',
  } as ViewStyle,

  markerText: {
    fontSize: typography.size.xs,
    textAlign: 'center',
  } as TextStyle,

  locationButton: {
    position: 'absolute',
    bottom: 170,
    right: 20,
    width: 50,
    height: 50,
    borderRadius: 25,
    backgroundColor: colors.white,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 1,
    borderColor: colors.border,
    ...shadows.md,
  } as ViewStyle,

  locationButtonText: {
    fontSize: 20,
    textAlign: 'center',
  } as TextStyle,
});

/**
 * Button styles
 */
export const buttons = StyleSheet.create({
  // Base button styles
  base: {
    height: layout.buttonHeight,
    borderRadius: borderRadius.base,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: spacing.base,
  } as ViewStyle,

  primary: {
    backgroundColor: colors.primary,
  } as ViewStyle,

  secondary: {
    backgroundColor: colors.gray100,
    borderWidth: 1,
    borderColor: colors.border,
  } as ViewStyle,

  // Icon buttons (like menu, location)
  iconButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
  } as ViewStyle,

  iconButtonLarge: {
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: colors.white,
    borderWidth: 1,
    borderColor: colors.border,
    ...shadows.md,
  } as ViewStyle,

  // Text styles for buttons
  primaryText: {
    fontSize: typography.size.base,
    fontWeight: typography.weight.semibold,
    color: colors.white,
  } as TextStyle,

  secondaryText: {
    fontSize: typography.size.base,
    fontWeight: typography.weight.semibold,
    color: colors.textPrimary,
  } as TextStyle,
});

/**
 * Input and Form Component styles
 */
export const inputs = StyleSheet.create({
  // Common input container
  container: {
    marginBottom: spacing.base,
  } as ViewStyle,

  label: {
    fontSize: typography.size.base,
    fontWeight: typography.weight.medium,
    color: colors.textPrimary,
    marginBottom: spacing.xs,
  } as TextStyle,

  textInput: {
    height: layout.inputHeight,
    borderWidth: 1,
    borderColor: colors.border,
    borderRadius: borderRadius.base,
    paddingHorizontal: spacing.base,
    fontSize: typography.size.base,
    color: colors.textPrimary,
    backgroundColor: colors.background,
  } as ViewStyle,

  textInputFocused: {
    borderColor: colors.primary,
    ...shadows.sm,
  } as ViewStyle,
});

/**
 * Switch component configuration
 */
const switchConfig = {
  trackColors: {
    false: colors.gray300,
    true: colors.primary,
  },
};

/**
 * Spacing utilities
 */
export const spacingUtils = StyleSheet.create({
  // Margin utilities
  marginXS: { margin: spacing.xs } as ViewStyle,
  marginSM: { margin: spacing.sm } as ViewStyle,
  marginMD: { margin: spacing.md } as ViewStyle,
  marginBase: { margin: spacing.base } as ViewStyle,
  marginLG: { margin: spacing.lg } as ViewStyle,
  marginXL: { margin: spacing.xl } as ViewStyle,

  marginTopXS: { marginTop: spacing.xs } as ViewStyle,
  marginTopSM: { marginTop: spacing.sm } as ViewStyle,
  marginTopMD: { marginTop: spacing.md } as ViewStyle,
  marginTopBase: { marginTop: spacing.base } as ViewStyle,
  marginTopLG: { marginTop: spacing.lg } as ViewStyle,
  marginTopXL: { marginTop: spacing.xl } as ViewStyle,

  marginBottomXS: { marginBottom: spacing.xs } as ViewStyle,
  marginBottomSM: { marginBottom: spacing.sm } as ViewStyle,
  marginBottomMD: { marginBottom: spacing.md } as ViewStyle,
  marginBottomBase: { marginBottom: spacing.base } as ViewStyle,
  marginBottomLG: { marginBottom: spacing.lg } as ViewStyle,
  marginBottomXL: { marginBottom: spacing.xl } as ViewStyle,

  // Padding utilities
  paddingXS: { padding: spacing.xs } as ViewStyle,
  paddingSM: { padding: spacing.sm } as ViewStyle,
  paddingMD: { padding: spacing.md } as ViewStyle,
  paddingBase: { padding: spacing.base } as ViewStyle,
  paddingLG: { padding: spacing.lg } as ViewStyle,
  paddingXL: { padding: spacing.xl } as ViewStyle,

  paddingHorizontalXS: { paddingHorizontal: spacing.xs } as ViewStyle,
  paddingHorizontalSM: { paddingHorizontal: spacing.sm } as ViewStyle,
  paddingHorizontalMD: { paddingHorizontal: spacing.md } as ViewStyle,
  paddingHorizontalBase: { paddingHorizontal: spacing.base } as ViewStyle,
  paddingHorizontalLG: { paddingHorizontal: spacing.lg } as ViewStyle,
  paddingHorizontalXL: { paddingHorizontal: spacing.xl } as ViewStyle,

  paddingVerticalXS: { paddingVertical: spacing.xs } as ViewStyle,
  paddingVerticalSM: { paddingVertical: spacing.sm } as ViewStyle,
  paddingVerticalMD: { paddingVertical: spacing.md } as ViewStyle,
  paddingVerticalBase: { paddingVertical: spacing.base } as ViewStyle,
  paddingVerticalLG: { paddingVertical: spacing.lg } as ViewStyle,
  paddingVerticalXL: { paddingVertical: spacing.xl } as ViewStyle,
});

/**
 * Modal styles (for filter modals, dialogs, etc.)
 */
export const modals = StyleSheet.create({
  // Modal overlay and container
  overlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'flex-end',
  } as ViewStyle,

  container: {
    backgroundColor: colors.white,
    borderTopLeftRadius: borderRadius.xl,
    borderTopRightRadius: borderRadius.xl,
    maxHeight: '85%',
  } as ViewStyle,

  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: spacing.lg,
    borderBottomWidth: 1,
    borderBottomColor: colors.border,
  } as ViewStyle,

  title: {
    fontSize: typography.size.lg,
    fontWeight: typography.weight.semibold,
    color: colors.textPrimary,
  } as TextStyle,

  closeButton: {
    width: 30,
    height: 30,
    borderRadius: 15,
    backgroundColor: colors.backgroundSecondary,
    justifyContent: 'center',
    alignItems: 'center',
  } as ViewStyle,

  closeText: {
    fontSize: 16,
    color: colors.textSecondary,
  } as TextStyle,

  content: {
    padding: spacing.lg,
    paddingBottom: spacing.sm,
  } as ViewStyle,

  footer: {
    flexDirection: 'row',
    padding: spacing.lg,
  } as ViewStyle,

  // Modal sections
  section: {
    marginBottom: spacing.lg,
  } as ViewStyle,

  sectionTitle: {
    fontSize: typography.size.base,
    fontWeight: typography.weight.semibold,
    color: colors.textPrimary,
    marginBottom: spacing.md,
  } as TextStyle,

  // Filter options layout
  optionsRow: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -4,
  } as ViewStyle,

  cuisineGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -4,
  } as ViewStyle,

  // Generic option styles
  option: {
    margin: 4,
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.sm,
    borderRadius: borderRadius.md,
    backgroundColor: '#4A4A4A',
    borderWidth: 1,
    borderColor: '#666666',
    alignItems: 'center',
  } as ViewStyle,

  optionText: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
  } as TextStyle,

  selectedOption: {
    backgroundColor: '#FF9800',
    borderColor: '#FF9800',
  } as ViewStyle,

  selectedText: {
    color: colors.white,
    fontWeight: typography.weight.semibold,
  } as TextStyle,

  // Specific option types
  priceOption: {
    margin: 4,
    paddingHorizontal: 16,
    paddingVertical: spacing.sm,
    borderRadius: borderRadius.lg,
    backgroundColor: colors.backgroundSecondary,
    borderWidth: 1,
    borderColor: colors.border,
    minWidth: 50,
    alignItems: 'center',
  } as ViewStyle,

  priceText: {
    fontSize: typography.size.sm,
    fontWeight: typography.weight.semibold,
    color: colors.textSecondary,
  } as TextStyle,

  cuisineOption: {
    margin: 4,
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.sm,
    borderRadius: borderRadius.md,
    backgroundColor: '#4A4A4A',
    borderWidth: 1,
    borderColor: '#666666',
  } as ViewStyle,

  cuisineText: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
  } as TextStyle,

  dietOption: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: spacing.sm,
    marginHorizontal: 4,
    borderRadius: borderRadius.sm,
    backgroundColor: colors.backgroundSecondary,
    minWidth: 100,
  } as ViewStyle,

  dietIcon: {
    fontSize: 16,
    marginRight: 6,
  } as TextStyle,

  dietText: {
    fontSize: typography.size.sm,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  calorieToggle: {
    padding: spacing.md,
    borderRadius: borderRadius.sm,
    backgroundColor: colors.backgroundSecondary,
    marginRight: spacing.sm,
    minWidth: 80,
    alignItems: 'center',
  } as ViewStyle,

  calorieOption: {
    padding: spacing.sm,
    borderRadius: 6,
    backgroundColor: colors.backgroundSecondary,
    marginHorizontal: 4,
    minWidth: 60,
    alignItems: 'center',
  } as ViewStyle,

  calorieText: {
    fontSize: typography.size.sm,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  // Preset and action buttons
  presetButton: {
    flex: 1,
    margin: 4,
    paddingHorizontal: spacing.md,
    paddingVertical: spacing.sm,
    borderRadius: borderRadius.sm,
    backgroundColor: colors.backgroundSecondary,
    borderWidth: 1,
    borderColor: colors.border,
    alignItems: 'center',
  } as ViewStyle,

  presetText: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  clearButton: {
    flex: 1,
    padding: spacing.lg,
    marginRight: 6,
    borderRadius: borderRadius.md,
    borderWidth: 1,
    borderColor: colors.border,
    alignItems: 'center',
  } as ViewStyle,

  clearText: {
    fontSize: typography.size.base,
    color: colors.textSecondary,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  applyButton: {
    flex: 1,
    padding: spacing.lg,
    marginLeft: 6,
    borderRadius: borderRadius.md,
    backgroundColor: colors.primary,
    alignItems: 'center',
  } as ViewStyle,

  applyText: {
    fontSize: typography.size.base,
    color: colors.white,
    fontWeight: typography.weight.semibold,
  } as TextStyle,

  // Price slider styles
  priceSliderContainer: {
    marginVertical: spacing.md,
    paddingHorizontal: spacing.sm,
  } as ViewStyle,

  priceSliderLabels: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: spacing.sm,
  } as ViewStyle,

  priceSliderLabel: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  priceSliderTrack: {
    height: 6,
    backgroundColor: colors.border,
    borderRadius: 3,
    position: 'relative',
  } as ViewStyle,

  priceSliderThumb: {
    width: 20,
    height: 20,
    backgroundColor: colors.primary,
    borderRadius: 10,
    position: 'absolute',
    top: -7,
  } as ViewStyle,

  // Tab container styles
  tabContainer: {
    flexDirection: 'row',
    backgroundColor: '#2A2A2A',
    borderRadius: borderRadius.md,
    padding: 2,
    marginVertical: spacing.sm,
  } as ViewStyle,

  tab: {
    flex: 1,
    paddingVertical: spacing.sm,
    paddingHorizontal: spacing.xs,
    borderRadius: borderRadius.sm,
    alignItems: 'center',
    backgroundColor: '#4A4A4A',
  } as ViewStyle,

  selectedTab: {
    backgroundColor: '#FF9800',
  } as ViewStyle,

  tabText: {
    fontSize: typography.size.sm,
    color: colors.textSecondary,
    fontWeight: typography.weight.medium,
  } as TextStyle,

  selectedTabText: {
    color: colors.white,
    fontWeight: typography.weight.semibold,
  } as TextStyle,

  // Multi-option styles
  multiOptionContainer: {
    marginTop: spacing.sm,
  } as ViewStyle,

  // Dark theme overrides
  darkContainer: {
    backgroundColor: '#1A1A1A',
  } as ViewStyle,

  darkTitle: {
    color: '#E0E0E0',
  } as TextStyle,

  darkSectionTitle: {
    color: '#E0E0E0',
  } as TextStyle,

  darkTabText: {
    color: '#E0E0E0',
  } as TextStyle,

  darkOptionText: {
    color: '#E0E0E0',
  } as TextStyle,

  darkCuisineText: {
    color: '#E0E0E0',
  } as TextStyle,

  darkClearText: {
    color: '#E0E0E0',
  } as TextStyle,

  darkApplyText: {
    color: '#FFFFFF',
  } as TextStyle,

  darkPriceLabel: {
    color: '#CCCCCC',
  } as TextStyle,

  disabledOptionText: {
    color: '#666',
  } as TextStyle,

  viewModeToggleContainer: {
    marginVertical: 16,
  } as ViewStyle,
});

/**
 * Floating Action Button (FAB) styles
 */
export const fabs = StyleSheet.create({
  container: {
    position: 'absolute',
    bottom: 100,
    right: spacing.lg,
    zIndex: 1000,
  } as ViewStyle,

  fab: {
    width: 56,
    height: 56,
    borderRadius: 28,
    backgroundColor: colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
    ...shadows.lg,
  } as ViewStyle,

  fabActive: {
    backgroundColor: colors.primaryDark,
    transform: [{ scale: 1.1 }],
  } as ViewStyle,

  fabIcon: {
    fontSize: 24,
  } as TextStyle,

  badge: {
    position: 'absolute',
    top: -2,
    right: -2,
    backgroundColor: colors.error,
    borderRadius: 10,
    minWidth: 20,
    height: 20,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: colors.white,
  } as ViewStyle,

  badgeText: {
    color: colors.white,
    fontSize: 12,
    fontWeight: typography.weight.bold,
  } as TextStyle,
});

/**
 * Map-specific component styles
 */
export const mapComponentStyles = StyleSheet.create({
  // Map container
  map: {
    flex: 1,
  } as ViewStyle,

  // Filter FAB (specific positioning)
  filterFAB: {
    position: 'absolute',
    bottom: 100,
    right: spacing.lg,
    width: 56,
    height: 56,
    borderRadius: 28,
    backgroundColor: colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
    ...shadows.lg,
  } as ViewStyle,

  filterFABIcon: {
    fontSize: 24,
  } as TextStyle,

  filterBadge: {
    position: 'absolute',
    top: -2,
    right: -2,
    backgroundColor: colors.error,
    borderRadius: 10,
    minWidth: 20,
    height: 20,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: colors.white,
  } as ViewStyle,

  filterBadgeText: {
    color: colors.white,
    fontSize: 12,
    fontWeight: typography.weight.bold,
  } as TextStyle,
});

/**
 * Modal Screen Styles (for Filters, Favorites, Profile, Settings)
 * Shared styles for modal screens with swipe-down-to-close gesture
 */
export const modalScreenStyles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'flex-end',
  } as ViewStyle,

  overlay: {
    flex: 1,
  } as ViewStyle,

  modalContainer: {
    height: '100%',
    backgroundColor: '#1A1A1A',
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    overflow: 'hidden',
  } as ViewStyle,

  dragHandle: {
    width: 40,
    height: 5,
    backgroundColor: '#666',
    borderRadius: 3,
    alignSelf: 'center',
    marginTop: 8,
    marginBottom: 4,
  } as ViewStyle,

  header: {
    paddingTop: 16,
    paddingBottom: 16,
    paddingHorizontal: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  } as ViewStyle,

  title: {
    fontSize: 28,
    fontWeight: typography.weight.bold,
    color: '#E0E0E0',
    marginBottom: 4,
  } as TextStyle,

  subtitle: {
    fontSize: 14,
    color: '#999',
  } as TextStyle,

  scrollView: {
    flex: 1,
  } as ViewStyle,

  section: {
    paddingVertical: 20,
    paddingHorizontal: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  } as ViewStyle,

  sectionTitle: {
    fontSize: 18,
    fontWeight: typography.weight.semibold,
    color: '#E0E0E0',
    marginBottom: 12,
  } as TextStyle,

  bottomSpacer: {
    height: 40,
  } as ViewStyle,

  // Favorites-specific styles
  emptyState: {
    alignItems: 'center',
    paddingTop: 60,
    paddingHorizontal: 32,
  } as ViewStyle,

  emptyIcon: {
    fontSize: 72,
    marginBottom: 16,
  } as TextStyle,

  emptyTitle: {
    fontSize: 22,
    fontWeight: typography.weight.bold,
    color: '#E0E0E0',
    marginBottom: 12,
    textAlign: 'center',
  } as TextStyle,

  emptyDescription: {
    fontSize: 16,
    color: '#999',
    textAlign: 'center',
    lineHeight: 24,
    marginBottom: 48,
  } as TextStyle,

  featuresContainer: {
    paddingHorizontal: 32,
    paddingBottom: 40,
  } as ViewStyle,

  featuresTitle: {
    fontSize: 18,
    fontWeight: typography.weight.semibold,
    color: '#E0E0E0',
    marginBottom: 16,
  } as TextStyle,

  featureItem: {
    fontSize: 16,
    color: '#CCCCCC',
    marginBottom: 12,
    lineHeight: 22,
  } as TextStyle,

  // Profile-specific styles
  profileSection: {
    alignItems: 'center',
    paddingVertical: 30,
    paddingHorizontal: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  } as ViewStyle,

  avatar: {
    width: 80,
    height: 80,
    borderRadius: 40,
    backgroundColor: '#333',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 16,
  } as ViewStyle,

  avatarText: {
    fontSize: 40,
  } as TextStyle,

  userName: {
    fontSize: 24,
    fontWeight: typography.weight.bold,
    color: '#E0E0E0',
    marginBottom: 4,
  } as TextStyle,

  userSubtitle: {
    fontSize: 14,
    color: '#999',
  } as TextStyle,

  sectionContent: {
    gap: 8,
  } as ViewStyle,

  preferenceText: {
    fontSize: 14,
    color: '#E0E0E0',
    marginBottom: 8,
  } as TextStyle,

  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 16,
  } as ViewStyle,

  statItem: {
    width: '45%',
    backgroundColor: '#2A2A2A',
    padding: 16,
    borderRadius: 12,
    alignItems: 'center',
  } as ViewStyle,

  statNumber: {
    fontSize: 32,
    fontWeight: typography.weight.bold,
    color: '#FF9800',
    marginBottom: 4,
  } as TextStyle,

  statLabel: {
    fontSize: 12,
    color: '#999',
    textAlign: 'center',
  } as TextStyle,

  featureBullet: {
    fontSize: 16,
    color: '#FF9800',
    marginRight: 8,
    marginTop: 2,
  } as TextStyle,

  featureText: {
    flex: 1,
    fontSize: 14,
    color: '#E0E0E0',
    lineHeight: 20,
  } as TextStyle,

  // Settings-specific styles
  settingItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#2A2A2A',
  } as ViewStyle,

  settingContent: {
    flex: 1,
    marginRight: 16,
  } as ViewStyle,

  settingLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: '#E0E0E0',
    marginBottom: 4,
  } as TextStyle,

  settingDescription: {
    fontSize: 13,
    color: '#999',
    lineHeight: 18,
  } as TextStyle,

  actionItem: {
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#2A2A2A',
  } as ViewStyle,

  actionText: {
    fontSize: 16,
    color: '#E0E0E0',
  } as TextStyle,

  aboutContent: {
    gap: 8,
  } as ViewStyle,

  aboutText: {
    fontSize: 14,
    color: '#999',
    marginBottom: 4,
  } as TextStyle,
});

/**
 * Map Footer styles - Dish recommendations list
 */
export const mapFooterStyles = StyleSheet.create({
  container: {
    backgroundColor: '#1A1A1A',
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    paddingTop: 16,
    paddingBottom: 20,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: -2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 8,
    elevation: 8,
  } as ViewStyle,

  header: {
    paddingHorizontal: 20,
    marginBottom: 16,
  } as ViewStyle,

  headerTitle: {
    fontSize: 18,
    fontWeight: '700',
    color: '#FFFFFF',
    marginBottom: 4,
  } as TextStyle,

  headerSubtitle: {
    fontSize: 14,
    color: '#B0B0B0',
  } as TextStyle,

  scrollView: {
    paddingLeft: 20,
  } as ViewStyle,

  scrollContent: {
    paddingRight: 20,
  } as ViewStyle,

  dishCard: {
    width: 160,
    backgroundColor: '#2A2A2A',
    borderRadius: 12,
    padding: 12,
    marginRight: 12,
    borderWidth: 1,
    borderColor: '#333333',
  } as ViewStyle,

  dishHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  } as ViewStyle,

  dishEmoji: {
    fontSize: 24,
  } as TextStyle,

  dishRating: {
    backgroundColor: '#333333',
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 6,
  } as ViewStyle,

  ratingText: {
    fontSize: 11,
    color: '#FFFFFF',
    fontWeight: '600',
  } as TextStyle,

  dishName: {
    fontSize: 14,
    fontWeight: '600',
    color: '#FFFFFF',
    marginBottom: 4,
    minHeight: 34,
  } as TextStyle,

  restaurantName: {
    fontSize: 12,
    color: '#B0B0B0',
    flex: 1,
  } as TextStyle,

  restaurantRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 8,
  } as ViewStyle,

  dishFooter: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  } as ViewStyle,

  priceRange: {
    fontSize: 12,
    fontWeight: '700',
  } as TextStyle,

  price: {
    fontSize: 14,
    fontWeight: '600',
    color: '#FFFFFF',
  } as TextStyle,

  unavailableBadge: {
    position: 'absolute',
    top: 8,
    right: 8,
    backgroundColor: '#FF5722',
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 4,
  } as ViewStyle,

  unavailableText: {
    fontSize: 9,
    color: '#FFFFFF',
    fontWeight: '600',
  } as TextStyle,

  showMoreCard: {
    width: 100,
    backgroundColor: '#333333',
    borderRadius: 12,
    padding: 12,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: '#FF9800',
    borderStyle: 'dashed',
  } as ViewStyle,

  showMoreIcon: {
    fontSize: 24,
    color: '#FF9800',
    fontWeight: '300',
    marginBottom: 4,
  } as TextStyle,

  showMoreText: {
    fontSize: 12,
    color: '#FF9800',
    textAlign: 'center',
    fontWeight: '500',
  } as TextStyle,

  filterSection: {
    paddingHorizontal: 20,
    paddingTop: 16,
    borderTopWidth: 1,
    borderTopColor: '#333333',
  } as ViewStyle,

  filterButton: {
    backgroundColor: '#FF9800',
    borderRadius: 12,
    paddingVertical: 16,
    paddingHorizontal: 24,
    alignItems: 'center',
    justifyContent: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 4,
  } as ViewStyle,

  filterButtonText: {
    fontSize: 16,
    fontWeight: '600',
    color: '#FFFFFF',
  } as TextStyle,
});

/**
 * View Mode Toggle styles - Segmented control for dish/restaurant view
 */
export const viewModeToggleStyles = StyleSheet.create({
  container: {
    flexDirection: 'row',
    backgroundColor: '#2A2A2A',
    borderRadius: 8,
    padding: 2,
    alignSelf: 'center',
  } as ViewStyle,

  button: {
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 6,
    backgroundColor: '#4A4A4A',
  } as ViewStyle,

  activeButton: {
    backgroundColor: '#FF9800',
  } as ViewStyle,

  text: {
    fontSize: 14,
    color: '#E0E0E0',
  } as TextStyle,

  activeText: {
    color: '#FFF',
  } as TextStyle,
});

/**
 * Drawer Filters styles - Permanent filtering interface
 */
export const drawerFiltersStyles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#1A1A1A',
    paddingHorizontal: 16,
  } as ViewStyle,

  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  } as ViewStyle,

  title: {
    fontSize: 20,
    fontWeight: typography.weight.bold,
    color: '#E0E0E0',
  } as TextStyle,

  clearButton: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 6,
    backgroundColor: '#FF9800',
  } as ViewStyle,

  clearButtonText: {
    color: '#fff',
    fontSize: 12,
    fontWeight: '600',
  } as TextStyle,

  section: {
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#2A2A2A',
  } as ViewStyle,

  sectionTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: '#E0E0E0',
    marginBottom: 12,
  } as TextStyle,

  // Tab container (for single selection like diet preference)
  tabContainer: {
    flexDirection: 'row',
    borderRadius: 8,
    backgroundColor: '#2A2A2A',
    padding: 2,
  } as ViewStyle,

  tab: {
    flex: 1,
    paddingVertical: 10,
    paddingHorizontal: 16,
    borderRadius: 6,
    alignItems: 'center',
    backgroundColor: '#4A4A4A',
  } as ViewStyle,

  selectedTab: {
    backgroundColor: '#FF9800',
  } as ViewStyle,

  tabText: {
    fontSize: 14,
    fontWeight: '500',
    color: '#E0E0E0',
  } as TextStyle,

  selectedTabText: {
    color: '#fff',
    fontWeight: '600',
  } as TextStyle,

  // Options container (for multiple selection)
  optionsContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -4,
  } as ViewStyle,

  option: {
    margin: 4,
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 16,
    backgroundColor: '#4A4A4A',
    borderWidth: 1,
    borderColor: '#666666',
  } as ViewStyle,

  selectedOption: {
    backgroundColor: '#FF9800',
    borderColor: '#FF9800',
  } as ViewStyle,

  optionText: {
    fontSize: 14,
    color: '#E0E0E0',
  } as TextStyle,

  selectedText: {
    color: '#fff',
    fontWeight: '600',
  } as TextStyle,

  disabledOption: {
    opacity: 0.3,
    backgroundColor: '#333',
    borderColor: '#555',
  } as ViewStyle,

  disabledText: {
    color: '#666',
  } as TextStyle,

  // Expandable button for ingredients
  expandableButton: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#2A2A2A',
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#444',
  } as ViewStyle,

  expandableButtonText: {
    fontSize: 14,
    color: '#E0E0E0',
    fontWeight: '500',
  } as TextStyle,

  expandableArrow: {
    fontSize: 16,
    color: '#E0E0E0',
  } as TextStyle,

  // Selected ingredients display
  selectedIngredientsContainer: {
    marginTop: 12,
  } as ViewStyle,

  selectedIngredientsTitle: {
    fontSize: 12,
    color: '#CCCCCC',
    marginBottom: 8,
  } as TextStyle,

  selectedIngredientsRow: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -4,
  } as ViewStyle,

  selectedIngredientTag: {
    flexDirection: 'row',
    alignItems: 'center',
    margin: 4,
    paddingLeft: 12,
    paddingRight: 4,
    paddingVertical: 6,
    backgroundColor: '#FF9800',
    borderRadius: 12,
  } as ViewStyle,

  selectedIngredientText: {
    fontSize: 12,
    color: '#fff',
    fontWeight: '500',
  } as TextStyle,

  removeIngredientButton: {
    marginLeft: 6,
    paddingHorizontal: 6,
    paddingVertical: 2,
  } as ViewStyle,

  removeIngredientText: {
    fontSize: 16,
    color: '#fff',
    fontWeight: typography.weight.bold,
  } as TextStyle,

  // Modal styles
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'center',
    alignItems: 'center',
  } as ViewStyle,

  modalContainer: {
    width: '95%',
    maxHeight: '90%',
    backgroundColor: '#1A1A1A',
    borderRadius: 12,
    overflow: 'hidden',
  } as ViewStyle,

  modalHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    padding: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#333',
  } as ViewStyle,

  modalTitle: {
    fontSize: 18,
    fontWeight: typography.weight.bold,
    color: '#E0E0E0',
  } as TextStyle,

  modalCloseButton: {
    padding: 4,
  } as ViewStyle,

  modalCloseText: {
    fontSize: 18,
    color: '#E0E0E0',
  } as TextStyle,

  modalContent: {
    height: 400,
    paddingHorizontal: 16,
    paddingTop: 8,
    backgroundColor: '#1A1A1A',
  } as ViewStyle,

  ingredientsList: {
    paddingVertical: 8,
    backgroundColor: '#1A1A1A',
  } as ViewStyle,

  ingredientListItem: {
    paddingVertical: 4,
    borderBottomWidth: 1,
    borderBottomColor: '#2A2A2A',
    backgroundColor: '#1A1A1A',
    minHeight: 50,
  } as ViewStyle,

  ingredientListContent: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    paddingHorizontal: 8,
  } as ViewStyle,

  ingredientListText: {
    fontSize: 16,
    color: '#E0E0E0',
    flex: 1,
  } as TextStyle,

  ingredientCheckbox: {
    width: 24,
    height: 24,
    borderRadius: 4,
    borderWidth: 2,
    borderColor: '#666',
    backgroundColor: '#2A2A2A',
    justifyContent: 'center',
    alignItems: 'center',
  } as ViewStyle,

  ingredientCheckboxSelected: {
    backgroundColor: '#FF9800',
    borderColor: '#FF9800',
  } as ViewStyle,

  ingredientCheckboxCheck: {
    color: '#fff',
    fontSize: 14,
    fontWeight: typography.weight.bold,
  } as TextStyle,

  ingredientsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: -4,
  } as ViewStyle,

  ingredientOption: {
    margin: 4,
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 16,
    backgroundColor: '#4A4A4A',
    borderWidth: 1,
    borderColor: '#666666',
  } as ViewStyle,

  modalFooter: {
    padding: 20,
    borderTopWidth: 1,
    borderTopColor: '#333',
  } as ViewStyle,

  modalDoneButton: {
    backgroundColor: '#FF9800',
    paddingVertical: 12,
    borderRadius: 8,
    alignItems: 'center',
  } as ViewStyle,

  modalDoneText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  } as TextStyle,
});

/**
 * Filter Components styles - Daily filter UI components
 */
export const filterComponentsStyles = StyleSheet.create({
  filterSection: {
    marginBottom: 32,
  } as ViewStyle,

  filterTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: colors.textPrimary,
    marginBottom: 16,
  } as TextStyle,

  filterSubtitle: {
    fontSize: 14,
    color: colors.textSecondary,
    marginBottom: 12,
  } as TextStyle,

  filterTitleRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  } as ViewStyle,

  filterActions: {
    flexDirection: 'row',
    marginHorizontal: 6,
  } as ViewStyle,

  actionButton: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    backgroundColor: colors.gray200,
    borderRadius: 16,
  } as ViewStyle,

  actionButtonText: {
    fontSize: 12,
    color: colors.textSecondary,
    fontWeight: '500',
  } as TextStyle,

  // Price range styles
  priceRangeContainer: {
    alignItems: 'center',
    marginBottom: 16,
  } as ViewStyle,

  priceLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: colors.primary,
  } as TextStyle,

  sliderContainer: {
    marginVertical: 8,
  } as ViewStyle,

  sliderLabels: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 8,
  } as ViewStyle,

  sliderLabel: {
    fontSize: 12,
    color: colors.textSecondary,
  } as TextStyle,

  sliderRow: {
    flexDirection: 'row',
    marginHorizontal: 4,
  } as ViewStyle,

  slider: {
    flex: 1,
    height: 40,
  } as ViewStyle,

  sliderThumb: {
    width: 20,
    height: 20,
    backgroundColor: colors.primary,
  } as ViewStyle,

  // Checkbox styles
  checkboxGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: 6,
  } as ViewStyle,

  checkboxItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 20,
    backgroundColor: colors.gray200,
    marginHorizontal: 4,
  } as ViewStyle,

  checkboxItemSelected: {
    backgroundColor: colors.primary + '20',
  } as ViewStyle,

  checkbox: {
    width: 20,
    height: 20,
    borderRadius: 10,
    borderWidth: 2,
    borderColor: colors.gray200,
    alignItems: 'center',
    justifyContent: 'center',
  } as ViewStyle,

  checkboxSelected: {
    borderColor: colors.primary,
    backgroundColor: colors.primary,
  } as ViewStyle,

  checkboxCheck: {
    color: colors.white,
    fontSize: 12,
    fontWeight: typography.weight.bold,
  } as TextStyle,

  checkboxLabel: {
    fontSize: 14,
    color: colors.textSecondary,
  } as TextStyle,

  checkboxLabelSelected: {
    color: colors.primary,
    fontWeight: '500',
  } as TextStyle,

  // Toggle styles
  toggleList: {
    marginHorizontal: 8,
  } as ViewStyle,

  toggleItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    paddingHorizontal: 16,
    backgroundColor: colors.gray100,
    borderRadius: 8,
    marginBottom: 8,
  } as ViewStyle,

  toggleLabel: {
    flexDirection: 'row',
    alignItems: 'center',
  } as ViewStyle,

  toggleIcon: {
    fontSize: 20,
    marginRight: 8,
  } as TextStyle,

  toggleText: {
    fontSize: 16,
    color: colors.textPrimary,
  } as TextStyle,

  // Spice level styles
  spiceLevelContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 12,
  } as ViewStyle,

  spiceLevelItem: {
    alignItems: 'center',
    padding: 12,
    borderRadius: 12,
    backgroundColor: colors.gray200,
    minWidth: 60,
  } as ViewStyle,

  spiceLevelSelected: {
    backgroundColor: colors.primary + '20',
  } as ViewStyle,

  spiceIcon: {
    fontSize: 20,
    marginBottom: 4,
  } as TextStyle,

  spiceLabel: {
    fontSize: 12,
    color: colors.textSecondary,
    textAlign: 'center',
  } as TextStyle,

  spiceLabelSelected: {
    color: colors.primary,
    fontWeight: '500',
  } as TextStyle,

  // Calorie range styles
  calorieContainer: {
    marginTop: 12,
  } as ViewStyle,

  calorieLabel: {
    fontSize: 14,
    color: colors.textSecondary,
    textAlign: 'center',
    marginBottom: 12,
  } as TextStyle,

  // Preset styles
  presetGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginHorizontal: 6,
    marginBottom: 20,
  } as ViewStyle,

  presetButton: {
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 20,
    backgroundColor: colors.gray200,
    borderWidth: 1,
    borderColor: colors.gray200,
    marginRight: 8,
    marginBottom: 8,
  } as ViewStyle,

  presetButtonActive: {
    backgroundColor: colors.primary,
    borderColor: colors.primary,
  } as ViewStyle,

  presetButtonText: {
    fontSize: 14,
    color: colors.textSecondary,
    fontWeight: '500',
  } as TextStyle,

  presetButtonTextActive: {
    color: colors.white,
  } as TextStyle,

  resetButton: {
    padding: 12,
    borderRadius: 8,
    backgroundColor: colors.error + '20',
    borderWidth: 1,
    borderColor: colors.error,
    alignItems: 'center',
  } as ViewStyle,

  resetButtonText: {
    color: colors.error,
    fontWeight: '500',
  } as TextStyle,

  // Summary styles
  summaryContainer: {
    padding: 12,
    backgroundColor: colors.primary + '10',
    borderRadius: 8,
    marginBottom: 16,
  } as ViewStyle,

  summaryText: {
    fontSize: 14,
    color: colors.primary,
    fontWeight: '500',
    textAlign: 'center',
  } as TextStyle,
});

/**
 * Filter FAB styles - Floating action button for filters
 */
export const filterFABStyles = StyleSheet.create({
  container: {
    position: 'absolute',
    bottom: 100,
    right: 20,
    zIndex: 1000,
  } as ViewStyle,

  fab: {
    width: 56,
    height: 56,
    borderRadius: 28,
    backgroundColor: colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 8,
    shadowColor: colors.black,
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
  } as ViewStyle,

  fabActive: {
    backgroundColor: colors.primaryDark,
    transform: [{ scale: 1.1 }],
  } as ViewStyle,

  fabIcon: {
    fontSize: 24,
  } as TextStyle,

  badge: {
    position: 'absolute',
    top: -2,
    right: -2,
    backgroundColor: colors.error,
    borderRadius: 10,
    minWidth: 20,
    height: 20,
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 2,
    borderColor: colors.white,
  } as ViewStyle,

  badgeText: {
    color: colors.white,
    fontSize: 12,
    fontWeight: typography.weight.bold,
  } as TextStyle,
});

/**
 * Floating Menu styles - Menu overlay for navigation
 */
export const floatingMenuStyles = StyleSheet.create({
  container: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    zIndex: 9999,
  } as ViewStyle,

  backdrop: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  } as ViewStyle,

  menuContainer: {
    position: 'absolute',
    right: 92,
    bottom: 560,
  } as ViewStyle,

  menuItem: {
    position: 'absolute',
    right: 0,
    backgroundColor: '#1A1A1A',
    borderRadius: 12,
    paddingVertical: 12,
    paddingHorizontal: 16,
    elevation: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.5,
    shadowRadius: 12,
    minWidth: 180,
    borderWidth: 1,
    borderColor: '#333',
  } as ViewStyle,

  menuItemContent: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12,
  } as ViewStyle,

  menuIcon: {
    fontSize: 20,
  } as TextStyle,

  menuLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: '#E0E0E0',
  } as TextStyle,
});

// Export all style collections
export const commonStyles = {
  containers,
  headers,
  text,
  emptyState,
  cards,
  forms,
  profile,
  mapStyles,
  buttons,
  inputs,
  spacingUtils,
  modals,
  fabs,
  mapComponentStyles,
  modalScreenStyles,
  mapFooterStyles,
  viewModeToggleStyles,
  drawerFiltersStyles,
  filterComponentsStyles,
  filterFABStyles,
  floatingMenuStyles,
};

export { switchConfig };

export default commonStyles;
